trigger:
- master

pool:
  vmImage: ubuntu-latest

parameters:
- name: AzureTest
  default: ''
- name: AzurePFsenseCLI
  default: ''
- name: scanTypeList
  type: string
  default: "SCA,SAST"
  # Allowed values: Comma-separated list containing any of: SCA,SAST,IMAGE,ALL


variables:
- name: MEND_URL
  value: https://app-eu.whitesourcesoftware.com
  # value: https://saas-eu.mend.io
- name: MEND_SCA_ENV
  value: https://app-eu.whitesourcesoftware.com
- name: MEND_SCA_API_URL
  value: https://api-app-eu.whitesourcesoftware.com/api/v2.0
- name: MEND_LOG_LEVEL
  value: DEBUG

steps:
  - script: echo Testing Mend CLI IN Azure!
    displayName: 'Run a one-line script'

  - script: |
      echo Add other tasks to build, test, and deploy your project.
      echo See https://aka.ms/yaml
    displayName: 'Run a multi-line script'

  # Install required packages including curl and PHP package manager (composer)
  - script: |
      sudo apt-get update
      sudo apt-get install -y curl php-cli unzip
      curl -sS https://getcomposer.org/installer | php
      sudo mv composer.phar /usr/local/bin/composer
    displayName: 'Install dependencies including PHP package manager'

  # Check and Install Mend CLI if not present
  - script: |
      mend -h > /dev/null 2>&1
      if [ $? -eq 127 ]; then
        echo "Downloading Mend CLI"
        curl https://downloads.mend.io/cli/linux_amd64/mend -o /usr/local/bin/mend && chmod +x /usr/local/bin/mend
      fi
    displayName: 'Check and Install Mend CLI'

  # Authenticate with Mend CLI
  - script: |
      mend auth login --non-interactive \
        --userKey $(MEND_SCA_USER_KEY_SECRET) \
        --orgId $(MEND_SCA_ORG_UUID_SECRET) \
        --env $(MEND_SCA_ENV)
    env:
      MEND_SCA_URL: $(MEND_SCA_URL)
      MEND_SCA_EMAIL: $(MEND_SCA_EMAIL_SECRET)
      MEND_SCA_API_URL: $(MEND_SCA_API_URL)
      MEND_LOG_LEVEL: $(MEND_LOG_LEVEL)
    displayName: 'Authenticate with Mend CLI'

  # Run Mend CLI Scans based on parameters
  - script: |
      WS_SCAN_TYPES="${{ parameters.scanTypeList }}"

      ### Mend SCA Scan #######
      if [[ "$WS_SCAN_TYPES" == *"SCA"* || "$WS_SCAN_TYPES" == *"ALL"* ]];
      then
        echo Running Mend SCA scan
        mend dep -u -s *//${{ parameters.appName }}//${{ parameters.projectName }} --fail-policy --non-interactive --export-results dep-results.txt
        export dep_exit=$?
        if [[ "$dep_exit" == "9" ]];
        then
          echo "##vso[task.logissue type=warning;] Dependency scan policy violation"
          echo "##vso[task.complete result=SucceededWithIssues;]"
        else
          echo "No policy violations found in dependencies scan"
        fi
        echo "##vso[task.uploadsummary]$(System.DefaultWorkingDirectory)/dep-results.txt"
      fi

      #########################

      ### Moving Mend logs ###
      mv ~/.mend/logs $(System.DefaultWorkingDirectory)
      mkdir -p $(System.DefaultWorkingDirectory)/logs
      mv *results* $(System.DefaultWorkingDirectory)/logs/
      #########################
    env:
      MEND_SCA_URL: $(MEND_SCA_URL)
      MEND_SCA_EMAIL: $(MEND_SCA_EMAIL_SECRET)
      MEND_SCA_USER_KEY: $(MEND_SCA_USER_KEY_SECRET)
      MEND_SCA_ORG_UUID: $(MEND_SCA_ORG_UUID_SECRET)
      MEND_SCA_API_URL: $(MEND_SCA_API_URL)
      MEND_LOG_LEVEL: $(MEND_LOG_LEVEL)
    displayName: 'Mend CLI Scan'


