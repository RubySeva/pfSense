trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
- name: MEND_URL
  value: https://app-eu.whitesourcesoftware.com
  # value: https://saas-eu.mend.io
- name: MEND_SCA_ENV
  value: https://app-eu.whitesourcesoftware.com
- name: MEND_SCA_URL
  value: https://app-eu.whitesourcesoftware.com
- name: MEND_SCA_API_URL
  value: https://api-app-eu.whitesourcesoftware.com/api/v2.0
- name: MEND_SCA_EMAIL
  value: $(MEND_SCA_EMAIL)
- name: MEND_SCA_USER_KEY
  value: $(MEND_SCA_USER_KEY)
- name: MEND_SCA_ORG_UUID
  value: $(MEND_SCA_ORG_UUID)
- name: MEND_LOG_LEVEL
  value: DEBUG

steps:
  - script: echo Testing Mend CLI IN Azure!
    displayName: 'Run a one-line script'

  - script: |
      echo Add other tasks to build, test, and deploy your project.
      echo See https://aka.ms/yaml
    displayName: 'Run a multi-line script'

  # Install required packages including curl and PHP package manager (composer)
  - script: |
      sudo apt-get update
      sudo apt-get install -y curl php-cli unzip
      curl -sS https://getcomposer.org/installer | php
      sudo mv composer.phar /usr/local/bin/composer
    displayName: 'Install dependencies including PHP package manager'

  # Download Mend CLI with recommended command
  - script: |
      sudo curl https://downloads.mend.io/cli/linux_amd64/mend -o /usr/local/bin/mend && sudo chmod +x /usr/local/bin/mend
    displayName: 'Download and set up Mend CLI'

  # Authenticate with Mend CLI
  - script: |
      mend auth login --non-interactive --env $MEND_SCA_ENV
    env:
      MEND_SCA_URL: $(MEND_SCA_URL)
      MEND_SCA_EMAIL: $(MEND_SCA_EMAIL)
      MEND_SCA_USER_KEY: $(MEND_SCA_USER_KEY)
      MEND_SCA_ORG_UUID: $(MEND_SCA_ORG_UUID)
      MEND_SCA_API_URL: $(MEND_SCA_API_URL)
      MEND_LOG_LEVEL: $(MEND_LOG_LEVEL)
    displayName: 'Authenticate with Mend CLI'

  # Install project dependencies using Composer
  - script: |
      composer install
    displayName: 'Install PHP dependencies'

  # Run Mend SCA CLI to scan the project
  - script: |
      echo Running Mend SCA scan
      mend dep -u -s "Ruby-Platform//CLIAzure//PHPazure" --fail-policy --non-interactive --export-results dep-results.txt
      export dep_exit=$?
      if [[ "$dep_exit" == "9" ]]; then
        echo "##vso[task.logissue type=warning;] Dependency scan policy violation"
        echo "##vso[task.complete result=SucceededWithIssues;]"
      else
        echo "No policy violations found in dependencies scan"
      fi
      echo "##vso[task.uploadsummary]$(System.DefaultWorkingDirectory)/dep-results.txt"
    env:
      MEND_SCA_URL: $(MEND_SCA_URL)
      MEND_SCA_EMAIL: $(MEND_SCA_EMAIL)
      MEND_SCA_USER_KEY: $(MEND_SCA_USER_KEY)
      MEND_SCA_ORG_UUID: $(MEND_SCA_ORG_UUID)
      MEND_SCA_API_URL: $(MEND_SCA_API_URL)
      MEND_LOG_LEVEL: $(MEND_LOG_LEVEL)
    displayName: 'Run Mend SCA CLI scan'
